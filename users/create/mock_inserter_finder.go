// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package create

import (
	user "users/user"

	mock "github.com/stretchr/testify/mock"
)

// MockInserterFinder is an autogenerated mock type for the InserterFinder type
type MockInserterFinder struct {
	mock.Mock
}

// FindOne provides a mock function with given fields: _a0
func (_m *MockInserterFinder) FindOne(_a0 string) (user.User, error) {
	ret := _m.Called(_a0)

	var r0 user.User
	if rf, ok := ret.Get(0).(func(string) user.User); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(user.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertOne provides a mock function with given fields: _a0
func (_m *MockInserterFinder) InsertOne(_a0 user.User) (interface{}, error) {
	ret := _m.Called(_a0)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(user.User) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(user.User) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
